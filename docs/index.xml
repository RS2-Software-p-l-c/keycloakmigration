<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Keycloakmigration</title>
    <link>https://mayope.github.io/keycloakmigration/</link>
    <description>Recent content on Keycloakmigration</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://mayope.github.io/keycloakmigration/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Required Actions</title>
      <link>https://mayope.github.io/keycloakmigration/migrations/requiredactions/</link>
      <pubDate>Thu, 08 Jul 2021 12:22:20 +0200</pubDate>
      
      <guid>https://mayope.github.io/keycloakmigration/migrations/requiredactions/</guid>
      <description>Required Actions#All migrations referring to the Required Actions resource in Authentication.
UpdateRequiredAction#Updates a required action. Only updates provided values. For an update of the required action alias use the oldAlias as alias and the newAlias in newAlias.
Parameters# realm: String, optional providerId: String, optional, default = no update, alias: String, mandatory newAlias: String, optional, default = no update name: String, optional, default = no update config: Map&amp;lt;String,String&amp;gt;, optional, default = no update defaultAction: Boolean, optional, default = no update enabled: Boolean, optional, default = no update priority: Boolean, optional, default = no update  Example#id:add-required-actionauthor:klg71realm:integ-testchanges:- registerRequiredAction:providerId:verify-emailname:VerifyEmail- updateRequiredAction:providerId:verify-emailalias:VERIFY_EMAILname:VerifyEmail2</description>
    </item>
    
    <item>
      <title>Client Migrations</title>
      <link>https://mayope.github.io/keycloakmigration/migrations/client/</link>
      <pubDate>Fri, 03 Jul 2020 12:22:20 +0200</pubDate>
      
      <guid>https://mayope.github.io/keycloakmigration/migrations/client/</guid>
      <description>Client Migrations#All migrations referring to the client resource.
addSimpleClient#Simple command to add a client to keycloak, TODO: add more fields
Parameters# realm: String, optional clientId: String, not optional, enabled: Boolean, optional, default=true attributes: Map&amp;lt; String, String&amp;gt;, optional, default = empty protocol: String, optional, default=&amp;quot;openid-connect&amp;rdquo; secret: String, optional publicClient: Boolean, optional, default=true redirectUris: List&amp;lt; String&amp;gt;, optional, default=empty authorizationServicesEnabled: Boolean, optional, default=false serviceAccountsEnabled: BOolean, optional, default=true  Example#id:add-simple-clientauthor:klg71changes:- addSimpleClient:realm:masterclientId:testdeleteClient#Delete a client in keycloak</description>
    </item>
    
    <item>
      <title>ClientScope Migrations</title>
      <link>https://mayope.github.io/keycloakmigration/migrations/scopes/</link>
      <pubDate>Fri, 03 Jul 2020 12:22:20 +0200</pubDate>
      
      <guid>https://mayope.github.io/keycloakmigration/migrations/scopes/</guid>
      <description>ClientScope Migrations#All migrations referring to the ClientScope resource.
addClientScope#Adds a clientScope to keycloak, fails if a clientScope with that name already exists
Parameters# realm: String, optional name: String, not optional description: String, optional, default = null protocol: String, optional, default = &amp;ldquo;openid-connect&amp;rdquo; protocolMappers: List&amp;lt; ProtocolMapper &amp;gt;, optional, default = empty list consentScreenText: String, optional, default = null displayOnConsentScreen: Boolean, optional, default = false guiOrder: Int, optional, default = null includeInTokenScope: Boolean, optional, default = true config: Map&amp;lt;String,String&amp;gt;, optional, default = no update  subclass ProtocolMapper# name: String, mandatory protocol: String, mandatory, default = null protocolMapper: String, mandatory consentRequired: Boolean, optional config: Map&amp;lt;String, String&amp;gt;, optional, default = empty  Example#id:add-client-scopesauthor:klg71realm:integ-testchanges:- addClientScope:name:apiassignRoleToClientScope#Adds a realm- or client-role (if roleClientId is set) to a clientScope.</description>
    </item>
    
    <item>
      <title>Flow Migrations</title>
      <link>https://mayope.github.io/keycloakmigration/migrations/flow/</link>
      <pubDate>Fri, 03 Jul 2020 12:22:20 +0200</pubDate>
      
      <guid>https://mayope.github.io/keycloakmigration/migrations/flow/</guid>
      <description>Flow Migrations#All migrations referring to the Authentication Flow resource.
AddFlow#Adds an authentication flow.
Parameters# realm: String, optional alias: String, not optional description: String, optional, default = &amp;ldquo;&amp;rdquo;, buildIn: Boolean, optional, default = false, providerId: String, optional, default = &amp;ldquo;basic-flow&amp;rdquo;, topLevel: Boolean, optional, default = true, executions: List&amp;lt; AuthenticationExecutionImport &amp;gt;, default = emptyList()  subclass AuthenticationExecutionImport# requirement: Flow.Requirement = &amp;ldquo;ALTERNATIVE&amp;rdquo; | &amp;ldquo;DISABLED&amp;rdquo; | &amp;ldquo;REQUIRED&amp;rdquo; | &amp;ldquo;CONDITIONAL&amp;rdquo; | &amp;ldquo;OPTIONAL&amp;rdquo; providerId: String = see providers in next point level: Int index: Int config: Map&amp;lt;String, String&amp;gt;, optional, default = empty  Known Flow providers on Release (09.</description>
    </item>
    
    <item>
      <title>Group Migrations</title>
      <link>https://mayope.github.io/keycloakmigration/migrations/group/</link>
      <pubDate>Fri, 03 Jul 2020 12:22:20 +0200</pubDate>
      
      <guid>https://mayope.github.io/keycloakmigration/migrations/group/</guid>
      <description>Group Migrations#All migrations referring to the group resource.
addGroup#Adds a new group to keycloak. Fails if the group already exists.
Parameters# realm: String, optional name: String, not optional parent: String, default=empty  Example#id:testauthor:klg71changes:- addGroup:realm:mastername:testGroupdeleteGroup#Removes a group from keycloak. Fails if the group does not exist.
Parameters# realm: String, optional name: String, not optional  Example#id:testauthor:klg71changes:- deleteGroup:realm:mastername:testUserupdateGroup#Updates a group from keycloak.</description>
    </item>
    
    <item>
      <title>Localization Migrations</title>
      <link>https://mayope.github.io/keycloakmigration/migrations/localization/</link>
      <pubDate>Fri, 03 Jul 2020 12:22:20 +0200</pubDate>
      
      <guid>https://mayope.github.io/keycloakmigration/migrations/localization/</guid>
      <description>Localization Migrations#All migrations referring to the localization resource.
addLocalizationEntry#adds a new localization entry, throws error if the entry exists for the same locale
Parameters# realm: String, optional locale: String, not optional, key: String, not optional, text: String, not optional  Example#id:add-localization-entryauthor:isaacchanges:- addLocalizationEntry:locale:enkey:countrytext:CountyupdateLocalizationEntry#updates a localization entry, throws error if the entry doest not exists
Parameters# realm: String, optional locale: String, not optional, key: String, not optional, text: String, not optional  Example#id:update-localization-entryauthor:isaacchanges:- updateLocalizationEntry:locale:enkey:countrytext:CountrydeleteLocalizationEntry#deletes a localization entry, throws error if the entry doest not exists</description>
    </item>
    
    <item>
      <title>Organization Migrations</title>
      <link>https://mayope.github.io/keycloakmigration/migrations/organization/</link>
      <pubDate>Fri, 03 Jul 2020 12:22:20 +0200</pubDate>
      
      <guid>https://mayope.github.io/keycloakmigration/migrations/organization/</guid>
      <description>Organization Migrations#All migrations referring to the organization resource.
addOrganization#Adds a new organization to an exsisting realm
Parameters# realm: String, optional name: String, not optional, alias: String, optional, default=name redirectUrl: String, optional, domains: List  Example#id:add-organizationauthor:isaac.merciecachanges:- addOrganization:name:testdomains:- name:test.comOrganizationDomain#Parameters# name: String, verified: Boolean, optional, default=false  </description>
    </item>
    
    <item>
      <title>Realm Migrations</title>
      <link>https://mayope.github.io/keycloakmigration/migrations/realm/</link>
      <pubDate>Fri, 03 Jul 2020 12:22:20 +0200</pubDate>
      
      <guid>https://mayope.github.io/keycloakmigration/migrations/realm/</guid>
      <description>Realm Migrations#All migrations referring to the realm resource.
addRealm#adds a Realm, throws error if realm with that id already exists
Parameters# name: String, not optional enabled: Boolean, optional, default=true id: String, optional, default=name  Example#id:add-realmauthor:klg71changes:- addRealm:name:integ-testdeleteRealm#deletes a Realm, throws error if realm with that id does not exists
Parameters# id: String, not optional  Example#id:add-realmauthor:klg71changes:- deleteRealm:id:integ-testupdateRealm#updates a Realm, throws error if realm with that id does not exists</description>
    </item>
    
    <item>
      <title>Role Migrations</title>
      <link>https://mayope.github.io/keycloakmigration/migrations/role/</link>
      <pubDate>Fri, 03 Jul 2020 12:22:20 +0200</pubDate>
      
      <guid>https://mayope.github.io/keycloakmigration/migrations/role/</guid>
      <description>Role Migrations#All migrations referring to the role resource.
addRole#Add a role to keycloak, fails if the role already exists
Parameters# realm: String, optional name: String, not optional, clientId: String, optional, default=realmRole, description: String, optional, default=&amp;rdquo;&amp;rdquo; attributes: Map&amp;lt; String,List&amp;lt; String&amp;raquo;, optional, default=empty composite: Boolean, optional, default=false, must be true if compositeChildRoles is specified clientRole: Boolean, optional, default=false, containerId: String, optional, default=not set compositeChildRoles: List, optional, default=not set  subclass RoleSelector# name: String, mandatory clientId: String, optional  Example#id:add-roleauthor:klg71changes:- addRole:realm:mastername:test3attributes:role:- value1- value2updateRole#Update an existing realm- or client-role in keycloak.</description>
    </item>
    
    <item>
      <title>User Federation Migrations</title>
      <link>https://mayope.github.io/keycloakmigration/migrations/identityprovider/</link>
      <pubDate>Fri, 03 Jul 2020 12:22:20 +0200</pubDate>
      
      <guid>https://mayope.github.io/keycloakmigration/migrations/identityprovider/</guid>
      <description>IdentityProvider Migrations#All migrations referring to the identityprovider resource.
AddKeycloakIdentityProvider#Adds a keycloak identity provider.
Parameters# realm: String, optional alias: String, not optional authorizationUrl: String, not optional tokenUrl: String, not optional clientId: String, not optional clientSecret: String, not optional clientAuthMethod: String, optional, default = &amp;ldquo;client_secret_post&amp;rdquo; logoutUrl: String, optional, default = &amp;quot;&amp;rdquo; userInfoUrl: String, optional, default = &amp;quot;&amp;rdquo; issuer: String, optional, default = &amp;quot;&amp;rdquo; displayName: String, optional, default = &amp;quot;&amp;rdquo; defaultScopes: List&amp;lt; String&amp;gt;, optional, default = emptyList() validateSignature: String, optional, default = &amp;quot;&amp;rdquo; forwardParameters: List, optional, default = emptyList() loginHint: Boolean, optional, default = false disableUserInfo: Boolean, optional, default = false hideOnLoginPage: Boolean, optional, default = false backchannelSupported: Boolean, optional, default = false syncMode: String, optional, default = &amp;ldquo;IMPORT&amp;rdquo; acceptsPromptsNoneForwardFromClient: String, optional, default = &amp;quot;&amp;rdquo; uiLocales: Boolean, optional, default = true guiOrder: String, optional, default = &amp;quot;&amp;rdquo; useJwksUrl: Boolean, optional, default = false enabled: Boolean, optional, default = true trustEmail: Boolean, optional, default = false storeToken: Boolean, optional, default = false linkOnly: Boolean, optional, default = false firstBrokerLoginFlowAlias: String, optional, default = &amp;ldquo;first broker login&amp;rdquo; postBrokerLoginFlowAlias: String, optional, default = &amp;quot;&amp;rdquo; updateProfileFirstLoginMode: String, optional, default = &amp;ldquo;on&amp;rdquo;  Example#id:add-keycloak-identity-providerauthor:klg71realm:integ-testchanges:- addKeycloakIdentityProvider:alias:testAliasauthorizationUrl:https://authUrltokenUrl:https://tokenUrlclientId:clientIdclientSecret:clientSecrethideOnLoginPage:truebackchannelSupported:truetrustEmail:truestoreToken:trueUpdateKeycloakIdentityProvider#Updates given fields of an existing keycloak identity provider but leaves all not provided fields untouched.</description>
    </item>
    
    <item>
      <title>User Federation Migrations</title>
      <link>https://mayope.github.io/keycloakmigration/migrations/userfederation/</link>
      <pubDate>Fri, 03 Jul 2020 12:22:20 +0200</pubDate>
      
      <guid>https://mayope.github.io/keycloakmigration/migrations/userfederation/</guid>
      <description>UserFederation Migrations#All migrations referring to the userfederation resource.
AddAdLdap#Adds an active directory to the realm
Parameters# realm: String, optional name: String, not optional config: Map &amp;lt;String, String&amp;gt; values:  connectionUrl, not optional usersDn, not optional bindCredential, not optional bindDn, not optional changedSyncPeriod, optional, default:&amp;ldquo;86400&amp;rdquo; fullSyncPeriod, optional, default:&amp;ldquo;604800&amp;rdquo; useKerberosAuthentication, optional, default: &amp;ldquo;false&amp;rdquo; allowKerberosAuthentication, optional, default: &amp;ldquo;false&amp;rdquo; pagination, optional, default: &amp;ldquo;true&amp;rdquo; readTimeout, optional, default: &amp;quot;&amp;rdquo; connectionTimeout, optional, default: &amp;quot;&amp;rdquo; connectionPooling, optional, default: &amp;ldquo;true&amp;rdquo; useTruststoreSPI, optional, default: &amp;ldquo;ldapsOnly&amp;rdquo; validatePasswordPolicy, optional, default: &amp;ldquo;false&amp;rdquo; searchScope, optional, default: &amp;ldquo;1&amp;rdquo; ldapFilter, optional, default: &amp;quot;&amp;rdquo; authenticationType, optional, default: &amp;ldquo;simple&amp;rdquo; userObjectClasses, optional, default: &amp;ldquo;person, organizationalPerson, user&amp;rdquo; uuidLdapAttribute, optional, default: &amp;ldquo;cn&amp;rdquo; rdnLdapAttribute, optional, default: &amp;ldquo;cn&amp;rdquo; usernameLdapAttribute, optional, default: &amp;ldquo;cn&amp;rdquo; importUsers, optional, default: &amp;ldquo;true&amp;rdquo; editMode, optional, default: &amp;ldquo;READ_ONLY&amp;rdquo; batchSize, optional, default: &amp;ldquo;1000&amp;rdquo; cachePolicy, optional, default: &amp;ldquo;DEFAULT&amp;rdquo; periodicChangedUsersSync, optional, default: &amp;ldquo;false&amp;rdquo; priority, optional, default: &amp;ldquo;0&amp;rdquo;    Example#id:add-ad-ldapauthor:klg71changes:- addAdLdap:realm:mastername:testLdapconfig:connectionUrl:https://testldapusersDN:usersTestDnbindCredential:testPasswordbindDN:testBindDnAddAdLdapFullNameMapper#Adds a full name mapper to an active directory ldap, throws an error if the ad doesn&amp;rsquo;t exists or if a mapper with this name already exists in this ad</description>
    </item>
    
    <item>
      <title>User Migrations</title>
      <link>https://mayope.github.io/keycloakmigration/migrations/user/</link>
      <pubDate>Fri, 03 Jul 2020 12:22:20 +0200</pubDate>
      
      <guid>https://mayope.github.io/keycloakmigration/migrations/user/</guid>
      <description>User Migrations#All migrations referring to the user resource.
addUser#Adds a user to keycloak. Fails if a user with that name already exists.
Parameters# realm: String, optional name: String, not optional enabled: Boolean, default=true emailVerified: Boolean, default=true attributes: Map with Layout Map&amp;lt;String, List&amp;lt; String &amp;raquo;, default=empty groups: List of groupnames to attach, List&amp;lt; String &amp;gt;, optional, default=empty realmRoles: List of realmroles to attach, List&amp;lt; String &amp;gt;, optional, default=empty clientRoles: List of ClientRoles to attach, List&amp;lt; ClientRole &amp;gt;, optional, default=empty email: String, optional, default=&amp;rdquo;&amp;rdquo; firstName: String, optional, default=&amp;rdquo;&amp;rdquo; lastName: String, optional, default=&amp;rdquo;&amp;rdquo;  ClientRole Parameters:</description>
    </item>
    
    <item>
      <title>Contributing</title>
      <link>https://mayope.github.io/keycloakmigration/contributing/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mayope.github.io/keycloakmigration/contributing/</guid>
      <description>Contributing#To start developing on this project you can use the gradle tasks.
To start the local development keycloak you can just use the task startLocalKeycloak
Tested with OpenJdk 12 and Keycloak 19.0.0
If you want to contribute to this project please visit the issues page and maybe you can find something interesting :)
Use keycloakmigration through maven dependency#Gradle dependency# // https://mvnrepository.com/artifact/de.klg71.keycloakmigration/keycloakmigrationcompile group: &#39;de.</description>
    </item>
    
    <item>
      <title>Gradle Groovy DSL</title>
      <link>https://mayope.github.io/keycloakmigration/quickstart/groovy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mayope.github.io/keycloakmigration/quickstart/groovy/</guid>
      <description>Gradle Groovy DSL#Filetree:# build.gradle settings.gradle keycloak-changelog.yml 01_create_realm.yml  build.gradle
plugins { id &amp;#34;de.klg71.keycloakmigrationplugin&amp;#34; version &amp;#34;x.x.x&amp;#34; } repositories { jcenter() } task keycloakMigrateLocal(type: KeycloakMigrationTask) { group = &amp;#34;keycloak&amp;#34; description = &amp;#34;Migrate the keycloak instance&amp;#34; migrationFile = &amp;#34;migration/keycloak-changelog.yml&amp;#34; adminUser = &amp;#34;admin&amp;#34; adminPassword = &amp;#34;admin&amp;#34; baseUrl = &amp;#34;http://localhost:8080&amp;#34; realm = &amp;#34;master&amp;#34; waitForKeycloak = false waitForKeycloakTimeout = 0L // infinit wait time  parameters = [USERNAME: &amp;#34;testUser&amp;#34;, PASSWORD: &amp;#34;testPassword&amp;#34;] } settings.</description>
    </item>
    
    <item>
      <title>Gradle Kotlin DSL</title>
      <link>https://mayope.github.io/keycloakmigration/quickstart/kotlin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mayope.github.io/keycloakmigration/quickstart/kotlin/</guid>
      <description>Gradle Kotlin DSL#Filetree:# build.gradle.kts settings.gradle.kts keycloak-changelog.yml 01_create_realm.yml  build.gradle.kts
plugins { id(&amp;#34;de.klg71.keycloakmigrationplugin&amp;#34;) version &amp;#34;x.x.x&amp;#34; } repositories { jcenter() } tasks { register&amp;lt;KeycloakMigrationTask&amp;gt;(&amp;#34;keycloakMigrateLocal&amp;#34;) { migrationFile = &amp;#34;keycloak-changelog.yml&amp;#34; adminUser = &amp;#34;admin&amp;#34; adminPassword = &amp;#34;adminPassword&amp;#34; baseUrl = &amp;#34;http://localhost:8080&amp;#34; realm = &amp;#34;master&amp;#34; waitForKeycloak(keycloakBaseUrl) parameters = mapOf( &amp;#34;USER_NAME&amp;#34; to &amp;#34;testUser&amp;#34;, &amp;#34;PASSWORD&amp;#34; to &amp;#34;password&amp;#34; ) waitForKeycloak = false waitForKeycloakTimeout = 0L // infinit wait time  } } settings.gradle.kts
rootProject.name = &amp;#34;keycloak-migration&amp;#34; keycloak-changelog.</description>
    </item>
    
    <item>
      <title>Implementation Substitution</title>
      <link>https://mayope.github.io/keycloakmigration/implementation_details/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mayope.github.io/keycloakmigration/implementation_details/</guid>
      <description>Implementation Details#The migration hashes are stored in the attribute named &amp;lsquo;migration&amp;rsquo; in the migration user.
There are no transactions in keycloak though if the rollback fails there might be a non deterministic state! If it fails I would like to receive a bug report for this.
If you struggle with invalid hashes on a linux-windows setup check the line endings of the json-import files as git might check them out as LF where on windows its CRLF and thus producing the error in hashing.</description>
    </item>
    
    <item>
      <title>Parameter Substitution</title>
      <link>https://mayope.github.io/keycloakmigration/migration_files/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mayope.github.io/keycloakmigration/migration_files/</guid>
      <description>Migration Files#There are two types of files to control migrations in keycloak. ChangeLog and ChangeSet (may sound similar in liquibase). The Changelog references all changeSets to apply and the ChangeSets contain the actual changes.
Changelog#Migrations are controlled through the changelog. It contains the changeSets used to execute the migration.
Parameters# includes: List of changesets to apply consisting of:  path: String, not optional, path to changeset relativeToFile: Boolean, optional, default=true, whether the file should be searched from the working dir or relative to the keycloak changelog file.</description>
    </item>
    
    <item>
      <title>Troubleshooting migration Hashes</title>
      <link>https://mayope.github.io/keycloakmigration/hashmigration/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mayope.github.io/keycloakmigration/hashmigration/</guid>
      <description>Troubleshooting migration hashes#The hash implementation from 0.0.12 to 0.1.0 has changed so the old hashes will always throw an error.
An hash error may also occur if you did make a syntactic but not semantic change to the changelog.
You can however call the migration script with the --correct-hashes switch and it will just replace the failing hashes. Alternatively you can execute the KeycloakMigrationCorrectHashesTask in gradle.
This will skip any control mechanism and you must to make sure that you have the same changelog that you migrated before.</description>
    </item>
    
    <item>
      <title>Usage trough fatjar</title>
      <link>https://mayope.github.io/keycloakmigration/quickstart/jar/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mayope.github.io/keycloakmigration/quickstart/jar/</guid>
      <description>Usage through fatjar#Filetree:# keycloakmigration-x.x.x-fat.jar (download on github releases) keycloak-changelog.yml 01_create_realm.yml  Execute#java -jar keycloakmigration-x.x.x-fat.jar Arguments#java -jar keycloakmigration.jar --helpusage: [-h] [-u USER] [-p PASSWORD] [-b BASEURL] [MIGRATION-FILE] [-r REALM][-c CLIENT] [--correct-hashes] [-k PARAMETER]... [--wait-for-keycloak][--wait-for-keycloak-timeout WAIT_FOR_KEYCLOAK_TIMEOUT]optional arguments:-h, --help show this help message and exit-u USER, --user USER Username for the migration user, defaulting to admin.</description>
    </item>
    
    <item>
      <title>Usage with Docker</title>
      <link>https://mayope.github.io/keycloakmigration/quickstart/docker/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mayope.github.io/keycloakmigration/quickstart/docker/</guid>
      <description>Usage with docker#you can also use keycloakmigraiton with docker. The migrations are then controlled trough environment variables and mounted volumes.
Usage#docker run --env BASEURL=http://localhost:8080 klg71/keycloakmigration Environment variables#  KEYCLOAK_CHANGELOG migration changelog, should be mounted
default: /migration/keycloak-changelog.yml
  ADMIN_USER user to execute migration
default: admin
  ADMIN_PASSWORD password of user to execute migration
default: admin
  ADMIN_TOTP totp of user to execute migration</description>
    </item>
    
    <item>
      <title>Using the Keycloak Api</title>
      <link>https://mayope.github.io/keycloakmigration/keycloak_api/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://mayope.github.io/keycloakmigration/keycloak_api/</guid>
      <description>Using the Keycloak Api#For the migrations to work I had to implement a keycloak administration api.
This api provides a KeycloakClient which connects to the keycloak instance. This client has methods to manage user, group, role, client, realms and userfederation resources.
To use it you can simply the maven dependency or download the keycloakapi-jar from the releases page.
Gradle Groovy DSL#// https://mvnrepository.com/artifact/de.klg71.keycloakmigration/keycloakmigration compile group: &amp;#39;de.</description>
    </item>
    
  </channel>
</rss>